Modulo 01
Aula 02

- Ciclo cascata (Ou Waterfall)
Modelo tradicional, lento, utilizado quando o mundo ainda era mais estático e não se tinha tanta rapidez como hoje, mas ainda é útil em projetos que são mais estaveis, como construção civil. 
Negócio --> Desenvolvimento e QA --> Operação --> Clientes (Pode demorar anos para esse ciclo ser completo, pois mudanças podem e vão acontecer, tendo que voltar para o time de negócio avaliar ou de desenvolvilmento para corrigir)

- Ciclo Ágil
Modelo Ágil que juntou a área de negócios, desenvolvimento e testes, abrindo uma maior comunicação. Além disso, as funcionalidades são desenvolvidas baseadas em sprints, sendo de forma incremental, o que quer dizer que a função 1 é pensada, desenvolvida, testada, após isso a função 2 segue esse ciclo. Ainda há uma falta de comunicação e divergencias com o setor de operações
Negócio, desenvolvimento e testes --> Operação --> Clientes 

- Ciclo DevOps
No ciclo DevOps, basicamente é tudo junto. Então todos os setores trabalham de forma integrada para garantir a implantaão agil de um projeto, retirando a separação do negócio, desenvolvimento e testes da operação. Como no ágil, há também os sprints, mas aqui já segue uma trajetoria até a implantaão, não somente até o teste, deixando tudo integrado. É necessário nessa prática o aprendizado e melhoria contínua, já que a entrega ao cliente é bem mais rápida- 


Aula 05
DevOps CALMS
-C
Cultura: Respeito as pessoas, criar pontes entre dev e ops, aceitar mudanças

-A
Automação: 	Integração e entrega contínua, infra como código, pipeline de implantação, orquestração
-L
Lean: Valor para os clientes, lotes pequenos, fluxo contínuo, reduzir WIP e lead time
-M
Medição(Metrics): telemetria, monitoramento, melhorias
-S
Compartilhamento(Sharing): Colaboração, feedback, boa comunicação, transparência

Aula 6
Príncipio das 3 maneiras
-Primeira Maneira
O objetivo principal é acelerar o fluxo do desenvolvimento até a operação e clientes, utilizando várias técnicas para agilizar a entrega

-Segunda Maneira
Receber o feedback rápido, utilizando métricas e os feedbacks dos clientes.

-Terceira Maneira
Diz respeito a ter confiança de errar e aprender continuamente.

Módulo 2
Aula 4:

-Sem teste automatizado, quanto mais código mais tempo e dinheiro será necessário
-testes no final do desenvolvimento tiram a oportunidade de aprendizado

Pirâmide ideal de testes da base ao topo: Teste unitario, serviços, UI e testes manuais
Pirâmide não ideal de testes da base ao topo: Testes manuais, UI, serviços e testes unitarios

TDD: Test-Driven Development
BDD: Behavior Driven Development